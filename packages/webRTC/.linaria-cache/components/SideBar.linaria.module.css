.s1phdpkb{box-shadow:0 2px 9px 0 rgba(0,0,0,0.12);position:fixed;left:0;top:0;z-index:101;height:100vh;overflow:auto;}
.d1iys8hm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;height:$nav-height;border-bottom:1px solid $gray-3;}.d1iys8hm img{margin:20px;width:120px;}
/*# sourceMappingURL=data:application/json;base64,*/